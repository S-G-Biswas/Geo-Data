{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Masai\\\\Geo-Data\\\\geo-data\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const mapRef = useRef();\n  useEffect(() => {\n    const map = mapRef.current.leafletElement;\n    const drawnItems = new L.FeatureGroup();\n    map.addLayer(drawnItems);\n\n    // const drawControl = new L.Control.Draw({\n    //   draw: {\n    //     marker: false,\n    //     polyline: false,\n    //     circle: false,\n    //     circlemarker: false,\n    //     polygon: {\n    //       allowIntersection: false,\n    //       drawError: {\n    //         color: '#e1e100', // Color the shape will turn when intersects\n    //         message: \"<strong>Oh snap!<strong> you can't draw that!\", // Message that will show when intersect\n    //       },\n    //       shapeOptions: {\n    //         color: '#3388ff',\n    //       },\n    //     },\n    //   },\n    //   edit: {\n    //     featureGroup: drawnItems,\n    //   },\n    // });\n\n    map.addControl(drawControl);\n    map.on(L.Draw.Event.CREATED, function (event) {\n      const layer = event.layer;\n      drawnItems.addLayer(layer);\n    });\n    return () => {\n      map.removeControl(drawControl);\n      map.off(L.Draw.Event.CREATED);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    ref: mapRef,\n    center: [0, 0],\n    zoom: 2,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useRef","MapContainer","TileLayer","L","jsxDEV","_jsxDEV","WorldMap","_s","mapRef","map","current","leafletElement","drawnItems","FeatureGroup","addLayer","addControl","drawControl","on","Draw","Event","CREATED","event","layer","removeControl","off","ref","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Masai/Geo-Data/geo-data/Client/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-draw';\r\n\r\nconst WorldMap = () => {\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const map = mapRef.current.leafletElement;\r\n\r\n    const drawnItems = new L.FeatureGroup();\r\n    map.addLayer(drawnItems);\r\n\r\n    // const drawControl = new L.Control.Draw({\r\n    //   draw: {\r\n    //     marker: false,\r\n    //     polyline: false,\r\n    //     circle: false,\r\n    //     circlemarker: false,\r\n    //     polygon: {\r\n    //       allowIntersection: false,\r\n    //       drawError: {\r\n    //         color: '#e1e100', // Color the shape will turn when intersects\r\n    //         message: \"<strong>Oh snap!<strong> you can't draw that!\", // Message that will show when intersect\r\n    //       },\r\n    //       shapeOptions: {\r\n    //         color: '#3388ff',\r\n    //       },\r\n    //     },\r\n    //   },\r\n    //   edit: {\r\n    //     featureGroup: drawnItems,\r\n    //   },\r\n    // });\r\n\r\n    map.addControl(drawControl);\r\n\r\n    map.on(L.Draw.Event.CREATED, function (event) {\r\n      const layer = event.layer;\r\n      drawnItems.addLayer(layer);\r\n    });\r\n\r\n    return () => {\r\n      map.removeControl(drawControl);\r\n      map.off(L.Draw.Event.CREATED);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer\r\n      ref={mapRef}\r\n      center={[0, 0]}\r\n      zoom={2}\r\n      style={{ height: '500px', width: '100%' }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACvD,OAAO,0BAA0B;AACjC,OAAO,oCAAoC;AAC3C,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGR,MAAM,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACd,MAAMU,GAAG,GAAGD,MAAM,CAACE,OAAO,CAACC,cAAc;IAEzC,MAAMC,UAAU,GAAG,IAAIT,CAAC,CAACU,YAAY,CAAC,CAAC;IACvCJ,GAAG,CAACK,QAAQ,CAACF,UAAU,CAAC;;IAExB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAH,GAAG,CAACM,UAAU,CAACC,WAAW,CAAC;IAE3BP,GAAG,CAACQ,EAAE,CAACd,CAAC,CAACe,IAAI,CAACC,KAAK,CAACC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAC5C,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;MACzBV,UAAU,CAACE,QAAQ,CAACQ,KAAK,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXb,GAAG,CAACc,aAAa,CAACP,WAAW,CAAC;MAC9BP,GAAG,CAACe,GAAG,CAACrB,CAAC,CAACe,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACJ,YAAY;IACXwB,GAAG,EAAEjB,MAAO;IACZkB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;IACfC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAE1C1B,OAAA,CAACH,SAAS;MACR8B,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAAC9B,EAAA,CAzDID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Masai\\\\Geo-Data\\\\geo-data\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, FeatureGroup, GeoJSON } from 'react-leaflet'; // Import GeoJSON\nimport { EditControl } from \"react-leaflet-draw\";\nimport 'leaflet/dist/leaflet.css';\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\"\n});\nconst WorldMap = () => {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const content = event.target.result;\n      try {\n        const data = JSON.parse(content);\n        setGeoJsonData(data);\n      } catch (error) {\n        console.error('Error parsing GeoJSON:', error);\n        alert('Error parsing GeoJSON');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const _created = e => console.log(e);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      backgroundColor: '#4a84fb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Upload Your Data Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".geojson\",\n      onChange: handleFileUpload,\n      style: {\n        marginTop: '20px',\n        marginBottom: '20px',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 4,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FeatureGroup, {\n        children: [/*#__PURE__*/_jsxDEV(EditControl, {\n          position: \"topright\",\n          onCreated: _created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), geoJsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: geoJsonData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"Z8XmfMueA5Wda06yIH3YSkhOjo4=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","L","MapContainer","TileLayer","FeatureGroup","GeoJSON","EditControl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","WorldMap","_s","geoJsonData","setGeoJsonData","handleFileUpload","event","file","target","files","reader","FileReader","onload","content","result","data","JSON","parse","error","console","alert","readAsText","_created","e","log","style","textAlign","backgroundColor","children","color","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","marginTop","marginBottom","display","marginLeft","marginRight","center","zoom","height","width","position","onCreated","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Masai/Geo-Data/geo-data/Client/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport L from \"leaflet\";\r\nimport { MapContainer, TileLayer, FeatureGroup, GeoJSON } from 'react-leaflet'; // Import GeoJSON\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport \"leaflet-draw/dist/leaflet.draw.css\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\r\n  iconUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\r\n  shadowUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\",\r\n});\r\n\r\nconst WorldMap = () => {\r\n  const [geoJsonData, setGeoJsonData] = useState(null);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const content = event.target.result;\r\n      try {\r\n        const data = JSON.parse(content);\r\n        setGeoJsonData(data);\r\n      } catch (error) {\r\n        console.error('Error parsing GeoJSON:', error);\r\n        alert('Error parsing GeoJSON');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const _created = e => console.log(e);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', backgroundColor:'#4a84fb' }}> \r\n     <h1 style={{color:'white' }}>Upload Your Data Here</h1>\r\n      <input type=\"file\" accept=\".geojson\" onChange={handleFileUpload} \r\n        style={{\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            display: 'block',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n          }}\r\n      />\r\n      <MapContainer\r\n        center={[0, 0]}\r\n        zoom={4}\r\n        style={{ height: '500px', width: '100%' }}\r\n      >\r\n        <FeatureGroup>\r\n          <EditControl position='topright' onCreated={_created} />\r\n          {geoJsonData && <GeoJSON data={geoJsonData} />} {/* Render GeoJSON */}\r\n        </FeatureGroup>\r\n\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
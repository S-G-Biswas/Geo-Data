{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Masai\\\\Geo-Data\\\\geo-data\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const mapRef = useRef();\n  const [drawControl, setDrawControl] = useState(null);\n  useEffect(() => {\n    var _mapRef$current;\n    const map = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.leafletElement;\n    if (map) {\n      const drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n      const control = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: false,\n          circlemarker: false,\n          polygon: {\n            allowIntersection: false,\n            drawError: {\n              color: '#e1e100',\n              message: \"<strong>Oh snap!<strong> you can't draw that!\"\n            },\n            shapeOptions: {\n              color: '#3388ff'\n            }\n          },\n          rectangle: {\n            shapeOptions: {\n              color: '#3388ff'\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      setDrawControl(control);\n      map.addControl(control);\n      map.on(L.Draw.Event.CREATED, function (event) {\n        const layer = event.layer;\n        drawnItems.addLayer(layer);\n      });\n    }\n    return () => {\n      if (map && drawControl) {\n        map.removeControl(drawControl);\n        map.off(L.Draw.Event.CREATED);\n      }\n    };\n  }, [mapRef, drawControl]);\n  const clearShapes = () => {\n    var _mapRef$current2;\n    const map = (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.leafletElement;\n    map.eachLayer(layer => {\n      if (!layer._url) {\n        map.removeLayer(layer);\n      }\n    });\n  };\n  const setDrawOptions = options => {\n    drawControl === null || drawControl === void 0 ? void 0 : drawControl.setDrawingOptions(options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDrawOptions({\n          polyline: false,\n          polygon: true,\n          rectangle: false,\n          circle: false\n        }),\n        children: \"Draw Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDrawOptions({\n          polyline: false,\n          polygon: false,\n          rectangle: true,\n          circle: false\n        }),\n        children: \"Draw Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearShapes(),\n        children: \"Clear Shapes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      ref: mapRef,\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"dLdJm+3eK0eZNlbe8u8+XODOna0=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","L","jsxDEV","_jsxDEV","WorldMap","_s","mapRef","drawControl","setDrawControl","_mapRef$current","map","current","leafletElement","drawnItems","FeatureGroup","addLayer","control","Control","Draw","draw","marker","polyline","circle","circlemarker","polygon","allowIntersection","drawError","color","message","shapeOptions","rectangle","edit","featureGroup","addControl","on","Event","CREATED","event","layer","removeControl","off","clearShapes","_mapRef$current2","eachLayer","_url","removeLayer","setDrawOptions","options","setDrawingOptions","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","center","zoom","height","width","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Masai/Geo-Data/geo-data/Client/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-draw';\r\n\r\nconst WorldMap = () => {\r\n  const mapRef = useRef();\r\n  const [drawControl, setDrawControl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const map = mapRef.current?.leafletElement;\r\n\r\n    if (map) {\r\n      const drawnItems = new L.FeatureGroup();\r\n      map.addLayer(drawnItems);\r\n\r\n      const control = new L.Control.Draw({\r\n        draw: {\r\n          marker: false,\r\n          polyline: false,\r\n          circle: false,\r\n          circlemarker: false,\r\n          polygon: {\r\n            allowIntersection: false,\r\n            drawError: {\r\n              color: '#e1e100',\r\n              message: \"<strong>Oh snap!<strong> you can't draw that!\",\r\n            },\r\n            shapeOptions: {\r\n              color: '#3388ff',\r\n            },\r\n          },\r\n          rectangle: {\r\n            shapeOptions: {\r\n              color: '#3388ff',\r\n            },\r\n          },\r\n        },\r\n        edit: {\r\n          featureGroup: drawnItems,\r\n        },\r\n      });\r\n\r\n      setDrawControl(control);\r\n\r\n      map.addControl(control);\r\n\r\n      map.on(L.Draw.Event.CREATED, function (event) {\r\n        const layer = event.layer;\r\n        drawnItems.addLayer(layer);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (map && drawControl) {\r\n        map.removeControl(drawControl);\r\n        map.off(L.Draw.Event.CREATED);\r\n      }\r\n    };\r\n  }, [mapRef, drawControl]);\r\n\r\n  const clearShapes = () => {\r\n    const map = mapRef.current?.leafletElement;\r\n    map.eachLayer((layer) => {\r\n      if (!layer._url) {\r\n        map.removeLayer(layer);\r\n      }\r\n    });\r\n  };\r\n\r\n  const setDrawOptions = (options) => {\r\n    drawControl?.setDrawingOptions(options);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <button onClick={() => setDrawOptions({ polyline: false, polygon: true, rectangle: false, circle: false })}>Draw Polygon</button>\r\n        <button onClick={() => setDrawOptions({ polyline: false, polygon: false, rectangle: true, circle: false })}>Draw Rectangle</button>\r\n        <button onClick={() => clearShapes()}>Clear Shapes</button>\r\n      </div>\r\n      <MapContainer\r\n        ref={mapRef}\r\n        center={[0, 0]}\r\n        zoom={2}\r\n        style={{ height: '500px', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACvD,OAAO,0BAA0B;AACjC,OAAO,oCAAoC;AAC3C,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGT,MAAM,CAAC,CAAC;EACvB,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDF,SAAS,CAAC,MAAM;IAAA,IAAAa,eAAA;IACd,MAAMC,GAAG,IAAAD,eAAA,GAAGH,MAAM,CAACK,OAAO,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,cAAc;IAE1C,IAAIF,GAAG,EAAE;MACP,MAAMG,UAAU,GAAG,IAAIZ,CAAC,CAACa,YAAY,CAAC,CAAC;MACvCJ,GAAG,CAACK,QAAQ,CAACF,UAAU,CAAC;MAExB,MAAMG,OAAO,GAAG,IAAIf,CAAC,CAACgB,OAAO,CAACC,IAAI,CAAC;QACjCC,IAAI,EAAE;UACJC,MAAM,EAAE,KAAK;UACbC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE,KAAK;UACbC,YAAY,EAAE,KAAK;UACnBC,OAAO,EAAE;YACPC,iBAAiB,EAAE,KAAK;YACxBC,SAAS,EAAE;cACTC,KAAK,EAAE,SAAS;cAChBC,OAAO,EAAE;YACX,CAAC;YACDC,YAAY,EAAE;cACZF,KAAK,EAAE;YACT;UACF,CAAC;UACDG,SAAS,EAAE;YACTD,YAAY,EAAE;cACZF,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDI,IAAI,EAAE;UACJC,YAAY,EAAEnB;QAChB;MACF,CAAC,CAAC;MAEFL,cAAc,CAACQ,OAAO,CAAC;MAEvBN,GAAG,CAACuB,UAAU,CAACjB,OAAO,CAAC;MAEvBN,GAAG,CAACwB,EAAE,CAACjC,CAAC,CAACiB,IAAI,CAACiB,KAAK,CAACC,OAAO,EAAE,UAAUC,KAAK,EAAE;QAC5C,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;QACzBzB,UAAU,CAACE,QAAQ,CAACuB,KAAK,CAAC;MAC5B,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAI5B,GAAG,IAAIH,WAAW,EAAE;QACtBG,GAAG,CAAC6B,aAAa,CAAChC,WAAW,CAAC;QAC9BG,GAAG,CAAC8B,GAAG,CAACvC,CAAC,CAACiB,IAAI,CAACiB,KAAK,CAACC,OAAO,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAAC9B,MAAM,EAAEC,WAAW,CAAC,CAAC;EAEzB,MAAMkC,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAC,gBAAA;IACxB,MAAMhC,GAAG,IAAAgC,gBAAA,GAAGpC,MAAM,CAACK,OAAO,cAAA+B,gBAAA,uBAAdA,gBAAA,CAAgB9B,cAAc;IAC1CF,GAAG,CAACiC,SAAS,CAAEL,KAAK,IAAK;MACvB,IAAI,CAACA,KAAK,CAACM,IAAI,EAAE;QACflC,GAAG,CAACmC,WAAW,CAACP,KAAK,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,cAAc,GAAIC,OAAO,IAAK;IAClCxC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyC,iBAAiB,CAACD,OAAO,CAAC;EACzC,CAAC;EAED,oBACE5C,OAAA;IAAA8C,QAAA,gBACE9C,OAAA;MAAK+C,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,gBACnC9C,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMN,cAAc,CAAC;UAAEzB,QAAQ,EAAE,KAAK;UAAEG,OAAO,EAAE,IAAI;UAAEM,SAAS,EAAE,KAAK;UAAER,MAAM,EAAE;QAAM,CAAC,CAAE;QAAA2B,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjIrD,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMN,cAAc,CAAC;UAAEzB,QAAQ,EAAE,KAAK;UAAEG,OAAO,EAAE,KAAK;UAAEM,SAAS,EAAE,IAAI;UAAER,MAAM,EAAE;QAAM,CAAC,CAAE;QAAA2B,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnIrD,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAAC,CAAE;QAAAQ,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNrD,OAAA,CAACJ,YAAY;MACX0D,GAAG,EAAEnD,MAAO;MACZoD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MACfC,IAAI,EAAE,CAAE;MACRT,KAAK,EAAE;QAAEU,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAZ,QAAA,eAE1C9C,OAAA,CAACH,SAAS;QACR8D,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACnD,EAAA,CAzFID,QAAQ;AAAA4D,EAAA,GAAR5D,QAAQ;AA2Fd,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
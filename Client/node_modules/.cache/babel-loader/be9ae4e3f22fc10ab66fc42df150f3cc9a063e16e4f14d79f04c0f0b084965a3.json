{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Masai\\\\Geo-Data\\\\geo-data\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const mapRef = useRef();\n\n  //   useEffect(() => {\n  //     const map = mapRef.current.leafletElement;\n\n  //     const drawnItems = new L.FeatureGroup();\n  //     map.addLayer(drawnItems);\n\n  //     const drawControl = new L.Control.Draw({\n  //       draw: {\n  //         marker: false,\n  //         polyline: false,\n  //         circle: false,\n  //         circlemarker: false,\n  //         polygon: {\n  //           allowIntersection: false,\n  //           drawError: {\n  //             color: '#e1e100', // Color the shape will turn when intersects\n  //             message: \"<strong>Oh snap!<strong> you can't draw that!\", // Message that will show when intersect\n  //           },\n  //           shapeOptions: {\n  //             color: '#3388ff',\n  //           },\n  //         },\n  //       },\n  //       edit: {\n  //         featureGroup: drawnItems,\n  //       },\n  //     });\n\n  //     map.addControl(drawControl);\n\n  //     map.on(L.Draw.Event.CREATED, function (event) {\n  //       const layer = event.layer;\n  //       drawnItems.addLayer(layer);\n  //     });\n\n  //     return () => {\n  //       map.removeControl(drawControl);\n  //       map.off(L.Draw.Event.CREATED);\n  //     };\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    ref: mapRef,\n    center: [0, 0],\n    zoom: 2,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"eZwvXZNGrOinO8i65lLhOza0GRY=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useRef","MapContainer","TileLayer","L","jsxDEV","_jsxDEV","WorldMap","_s","mapRef","ref","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Masai/Geo-Data/geo-data/Client/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-draw';\r\n\r\nconst WorldMap = () => {\r\n  const mapRef = useRef();\r\n\r\n//   useEffect(() => {\r\n//     const map = mapRef.current.leafletElement;\r\n\r\n//     const drawnItems = new L.FeatureGroup();\r\n//     map.addLayer(drawnItems);\r\n\r\n//     const drawControl = new L.Control.Draw({\r\n//       draw: {\r\n//         marker: false,\r\n//         polyline: false,\r\n//         circle: false,\r\n//         circlemarker: false,\r\n//         polygon: {\r\n//           allowIntersection: false,\r\n//           drawError: {\r\n//             color: '#e1e100', // Color the shape will turn when intersects\r\n//             message: \"<strong>Oh snap!<strong> you can't draw that!\", // Message that will show when intersect\r\n//           },\r\n//           shapeOptions: {\r\n//             color: '#3388ff',\r\n//           },\r\n//         },\r\n//       },\r\n//       edit: {\r\n//         featureGroup: drawnItems,\r\n//       },\r\n//     });\r\n\r\n//     map.addControl(drawControl);\r\n\r\n//     map.on(L.Draw.Event.CREATED, function (event) {\r\n//       const layer = event.layer;\r\n//       drawnItems.addLayer(layer);\r\n//     });\r\n\r\n//     return () => {\r\n//       map.removeControl(drawControl);\r\n//       map.off(L.Draw.Event.CREATED);\r\n//     };\r\n//   }, []);\r\n\r\n  return (\r\n    <MapContainer\r\n      ref={mapRef}\r\n      center={[0, 0]}\r\n      zoom={2}\r\n      style={{ height: '500px', width: '100%' }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACvD,OAAO,0BAA0B;AACjC,OAAO,oCAAoC;AAC3C,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGR,MAAM,CAAC,CAAC;;EAEzB;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEE,oBACEK,OAAA,CAACJ,YAAY;IACXQ,GAAG,EAAED,MAAO;IACZE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;IACfC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAE1CV,OAAA,CAACH,SAAS;MACRc,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACd,EAAA,CAzDID,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}